name: Linux & Mac OS
on:
  push:
    branches:
      - 'release_branch'
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'
    paths-ignore:
      - '**.md'
      - '.circleci/*'
      - '.azure-pipelines.yml'
      - 'run-route-scripts/*'
      - 'test/*'
      - 'test_requests/*'
      - '.vcpkg_deps.txt'

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04, macos-10.15]
    env:
      CIBW_ARCHS: x86_64

    steps:
      - name: Checkout 
        uses: actions/checkout@v2  
        with:
          submodules: recursive

      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel==2.0.0

      - name: Build Linux wheels
        if: matrix.os == 'ubuntu-20.04'
        run: |
          python -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_BUILD: cp37-manylinux_x86_64 cp38-manylinux_x86_64 cp39-manylinux_x86_64
          CIBW_MANYLINUX_X86_64_IMAGE: ghcr.io/gis-ops/manylinux:valhalla_py
          CIBW_TEST_COMMAND: cd {project}/test/bindings/python && python -m unittest test_utrecht.py -v
          CIBW_BEFORE_BUILD: 'python -m pip install --upgrade pip'
        
      - name: Build Mac wheels
        if: matrix.os == 'macos-10.15'
        run: |
          brew install ninja cmake protobuf cmake ccache libtool boost libspatialite pkg-config luajit curl wget czmq lz4 spatialite-tools unzip
          pip3 install requests
          git clone https://github.com/kevinkreiser/prime_server --recurse-submodules && cmake -B build . && cmake --build build && make -C build install
          python -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_BUILD:	cp37-macosx_x86_64 cp38-macosx_x86_64 cp39-macosx_x86_64
          CIBW_TEST_COMMAND: cd {project}/test/bindings/python && python -m unittest test_utrecht.py -v
          CIBW_BEFORE_BUILD: 'python -m pip install --upgrade pip'

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl
    
  upload_pypi:
    needs: [build_wheels]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: artifact
          path: dist

      - uses: pypa/gh-action-pypi-publish@v1.4.2
        with:
          user: ${{ secrets.TWINE_USERNAME }}
          password: ${{ secrets.TWINE_PASSWORD }}
          repository_url: https://test.pypi.org/legacy/
