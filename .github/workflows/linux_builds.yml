name: manylinux_2_24 & Windows 2019
on:
  push:
    branches:
      - "release_branch"
    tags:
      - "*"
    paths-ignore:
      - '**.md'
      - '.circleci/*'
      - '.azure-pipelines.yml'
      - 'run-route-scripts/*'
      - 'test/*'
      - 'test_requests/*'
      - '.vcpkg_deps.txt'

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # os: [ubuntu-20.04, macos-10.15, windows-2019]
        os: [ubuntu-20.04, macos-10.15]
    env:
      CIBW_ARCHS: x86_64
      VCPKG_DIR: ${{ github.workspace }}\vcpkg
      VCPKG_REF: 'f4bd6423'

    steps:
      - name: Checkout 
        uses: actions/checkout@v2  
        with:
          submodules: recursive

      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel==2.0.0

      - name: Build Linux wheels
        if: matrix.os == 'ubuntu-20.04'
        run: |
          python -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_BUILD: cp37-manylinux_x86_64 cp38-manylinux_x86_64 cp39-manylinux_x86_64
          CIBW_MANYLINUX_X86_64_IMAGE: ghcr.io/gis-ops/manylinux:valhalla_py
          CIBW_TEST_COMMAND: ''
        
      - name: Build Mac wheels
        if: matrix.os == 'macos-10.15'
        run: |
          brew install ninja cmake protobuf cmake ccache libtool boost libspatialite pkg-config luajit curl wget czmq lz4 spatialite-tools unzip
          pip3 install requests
          git clone https://github.com/kevinkreiser/prime_server --recurse-submodules && cmake -B build . && cmake --build build && make -C build install
          python -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_BUILD:	cp37-macosx_x86_64 cp38-macosx_x86_64 cp39-macosx_x86_64
          CIBW_TEST_COMMAND: ''

      - name: Install vcpkg
        if: matrix.os == 'windows-2019'
        run: |
          git clone https://github.com/microsoft/vcpkg ${{ env.VCPKG_DIR }}
          git -C ${{ env.VCPKG_DIR }} checkout ${{ env.VCPKG_REF }}
          echo.set(VCPKG_BUILD_TYPE release)>> ${{ env.VCPKG_DIR }}\triplets\x64-windows.cmake
          call ${{ env.VCPKG_DIR }}\bootstrap-vcpkg.bat
          ${{ env.VCPKG_DIR }}\vcpkg.exe version
        shell: cmd

      - name: Install Win deps
        if: matrix.os == 'windows-2019'
        uses: lukka/run-vcpkg@v7
        with:
          setupOnly: false
          vcpkgDirectory: ${{ env.VCPKG_DIR }}
          appendedCacheKey: ${{ hashFiles('./.vcpkg_deps.txt') }}-${{ env.VCPKG_REF }}
          vcpkgTriplet: x64-windows
          vcpkgArguments: '@${{ github.workspace }}/.vcpkg_deps.txt'
          doNotUpdateVcpkg: true
          useShell: cmd

      - name: Build Windows wheels
        if: matrix.os == 'windows-2019'
        run: |
          dir ${{ env.VCPKG_DIR }}\scripts\buildsystems
          dir ${{ env.VCPKG_DIR }}\installed\x64-windows\include
          dir test\bindings\python
          python -m cibuildwheel --output-dir wheelhouse
        shell: cmd
        env:
          CIBW_BUILD: cp37-win_amd64 cp38-win_amd64 cp39-win_amd64
          CIBW_TEST_COMMAND: ''
          CIBW_ARCHS_WINDOWS: AMD64
          CMAKE_TOOLCHAIN_FILE: ${{ env.VCPKG_DIR }}\scripts\buildsystems\vcpkg.cmake
          LUA_INCLUDE_DIR: ${{ env.VCPKG_DIR }}\installed\x64-windows\include\luajit
          LUA_LIBRARIES: ${{ env.VCPKG_DIR }}\installed\x64-windows\lib\lua51.lib

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl
